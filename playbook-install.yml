---
- hosts: flarum
  vars:
    ansible_python_interpreter: /usr/bin/python3
    # see https://docs.ansible.com/ansible/latest/user_guide/become.html#risks-of-becoming-an-unprivileged-user
    ansible_common_remote_group: "{{pac}}"
    ansible_remote_tmp: ~/.ansible/tmp

  tasks:
  - name: Create user, domain and database
    import_tasks: tasks/hs_basis.yml

  #################################
  ## create directories
  #################################
  - name: create directory flarum
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/flarum"
      state: directory
  - name: create directory etc
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/etc"
      state: directory
  - name: create directory var/tmp
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/var/tmp"
      state: directory
  - name: create directory var/log
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/var/log"
      state: directory

  #################################
  ## install requirements
  #################################
  - name: Install composer
    import_tasks: tasks/hs_composer.yml

  ##################################
  ## install flarum
  ##################################

  - name: install flarum
    become: yes
    become_user: "{{pac}}-{{user}}"
    shell: |
      php ~/composer/composer.phar create-project flarum/flarum .
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/flarum"
      creates: "/home/pacs/{{pac}}/users/{{user}}/flarum/public"

  - name: install german language pack
    become: yes
    become_user: "{{pac}}-{{user}}"
    shell: |
      php ~/composer/composer.phar require flarum-lang/german
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/flarum"
      creates: "/home/pacs/{{pac}}/users/{{user}}/flarum/vendor/flarum-lang/german"

  ##################################
  ## configuration
  ##################################
  - name: upload configuration file
    become: yes
    become_user: "{{pac}}-{{user}}"
    template:
      src: "templates/config.yml"
      dest: "/home/pacs/{{pac}}/users/{{user}}/flarum/config.yml"

  - name: upload mysql configuration file
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/.my.cnf" src="templates/my.cnf" mode=0600

  ######################
  ## initialise instance
  ######################
  - name: initialise instance
    become: yes
    become_user: "{{pac}}-{{user}}"
    shell: |
      php flarum install --file=config.yml || exit -1
      touch "/home/pacs/{{pac}}/users/{{user}}/.ansible_instance_initialised"
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/flarum"
      creates: "/home/pacs/{{pac}}/users/{{user}}/.ansible_instance_initialised"

  - name: configure smtp
    become: yes
    become_user: "{{pac}}-{{user}}"
    shell: |
      echo 'INSERT INTO `fl_settings` (`key`, `value`) VALUES("mail_driver", "smtp") ON DUPLICATE KEY UPDATE `value`="smtp"' | mysql || exit -1
      echo 'INSERT INTO `fl_settings` (`key`, `value`) VALUES("mail_encryption", "ssl") ON DUPLICATE KEY UPDATE `value`="ssl"' | mysql || exit -1
      echo 'INSERT INTO `fl_settings` (`key`, `value`) VALUES("mail_from", "noreply@{{domain}}") ON DUPLICATE KEY UPDATE `value`="noreply@{{domain}}"' | mysql || exit -1
      echo 'INSERT INTO `fl_settings` (`key`, `value`) VALUES("mail_host", "{{pac}}.hostsharing.net") ON DUPLICATE KEY UPDATE `value`="{{pac}}.hostsharing.net"' | mysql || exit -1
      echo 'INSERT INTO `fl_settings` (`key`, `value`) VALUES("mail_password", "{{password}}") ON DUPLICATE KEY UPDATE `value`="{{password}}"' | mysql || exit -1
      echo 'INSERT INTO `fl_settings` (`key`, `value`) VALUES("mail_port", "465") ON DUPLICATE KEY UPDATE `value`="465"' | mysql || exit -1
      echo 'INSERT INTO `fl_settings` (`key`, `value`) VALUES("mail_username", "{{pac}}-{{user}}") ON DUPLICATE KEY UPDATE `value`="{{pac}}-{{user}}"' | mysql || exit -1
      touch "/home/pacs/{{pac}}/users/{{user}}/.ansible_smtp_initialised"
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/flarum"
      creates: "/home/pacs/{{pac}}/users/{{user}}/.ansible_smtp_initialised"

  ########################################
  ## install a couple of useful extensions
  ########################################
  - name: install extension flarum-lang/german
    become: yes
    become_user: "{{pac}}-{{user}}"
    shell: |
      php ~/composer/composer.phar require flarum-lang/german || exit -1
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/flarum"
      creates: "/home/pacs/{{pac}}/users/{{user}}/flarum/vendor/flarum-lang/german"

  - name: install extension clarkwinkelmann/flarum-ext-first-post-approval
    become: yes
    become_user: "{{pac}}-{{user}}"
    shell: |
      php ~/composer/composer.phar require clarkwinkelmann/flarum-ext-first-post-approval || exit -1
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/flarum"
      creates: "/home/pacs/{{pac}}/users/{{user}}/flarum/vendor/clarkwinkelmann/flarum-ext-first-post-approval"

  - name: install extension tpokorra/flarum-ext-post-notification
    become: yes
    become_user: "{{pac}}-{{user}}"
    shell: |
      php ~/composer/composer.phar require tpokorra/flarum-ext-post-notification || exit -1
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/flarum"
      creates: "/home/pacs/{{pac}}/users/{{user}}/flarum/vendor/tpokorra/flarum-ext-post-notification"

  - name: install extension fof/split
    become: yes
    become_user: "{{pac}}-{{user}}"
    shell: |
      php ~/composer/composer.phar require fof/split || exit -1
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/flarum"
      creates: "/home/pacs/{{pac}}/users/{{user}}/flarum/vendor/fof/split"

  - name: install extension fof/upload
    become: yes
    become_user: "{{pac}}-{{user}}"
    shell: |
      php ~/composer/composer.phar require fof/upload || exit -1
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/flarum"
      creates: "/home/pacs/{{pac}}/users/{{user}}/flarum/vendor/fof/upload"

  - name: install extension fof/spamblock
    become: yes
    become_user: "{{pac}}-{{user}}"
    shell: |
      php ~/composer/composer.phar require fof/spamblock || exit -1
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/flarum"
      creates: "/home/pacs/{{pac}}/users/{{user}}/flarum/vendor/fof/spamblock"

  - name: clean up composer cache
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/.cache/composer"
      state: absent

  ########################
  ## setup the apache site
  ########################
  - name: drop htdocs-ssl
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
       path: "/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/htdocs-ssl"
       state: absent
  - name: create symbolic link for htdocs-ssl
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      src: "/home/pacs/{{pac}}/users/{{user}}/flarum/public"
      dest: "/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/htdocs-ssl"
      state: link
